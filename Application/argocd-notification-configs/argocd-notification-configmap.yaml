apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
  namespace: argocd
data:
  service.webhook.gchat: |
    url: $webhook-url
    headers:
    -name: "Content-Type"
    value: "application/json"
  template.sync: |
    webhook:
      gchat:
        method: POST
        body: |
          {"cardsV2":[{"cardId":"unique-card-id","card":{"header":{"title":"Shivam Saini","subtitle":"DevSecOps","imageUrl":"https://lh3.googleusercontent.com/a/ACg8ocJBQPR_yrhZMTUbOApAhAM_5_fyuODKlou40b8ADAgpcA=s576-c-no","imageType":"CIRCLE","imageAltText":"Avatar for Shivam Saini"},"sections":[{"header":"Contact Info","widgets":[{"decoratedText":{"startIcon":{"knownIcon":"EMAIL"},"text":"shivam.saini@zerodhafundhouse.com"}},{"decoratedText":{"startIcon":{"knownIcon":"PERSON"},"text":"Online"}}]}]}}]}
  template.fail: |
    webhook:
      gchat:
        method: POST
        body: |
          {
          "text": "The app *{{ .app.metadata.name }}* has *fail!* "
          }
  template.out: |
    webhook:
      gchat:
        method: POST
        body: |
          {
          "text": "*App:*   {{ .app.metadata.name }}\n*State:*    OutOfSync! \n*Author:*    {{ (call .repo.GetCommitMetadata .app.status.sync.revision).Author }}\n*Changes:*   {{ (call .repo.GetCommitMetadata .app.status.sync.revision).Message }}"
          }

  template.prune: |
    webhook:
      gchat:
        method: POST
        body: |
          {
          "text": "The app *{{ .app.metadata.name }}* health status is in *Progressing* mode So we need to *prune* old deployment! "
          }
          
  trigger.sync-operation-change: |
    - when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy' and app.status.sync.status != 'OutOfSync' 
      # oncePer: app.status.sync.revision
      send: [sync]
    - when: app.status.operationState.phase in ['Error', 'Failed']
      send: [fail]
    - when: app.status.sync.status in ['OutOfSync']
      send: [out]
    # - when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Progressing'
    #   send: [prune]
    #   and time.Now().Sub(time.Parse(app.status.operationState.startedAt)).Minutes() >= 2